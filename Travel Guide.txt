CREATE TABLE CITY(
    CITY VARCHAR(30),
    CITY_ID VARCHAR(3),
    PRIMARY KEY(CITY_ID)
);

INSERT INTO CITY VALUES('CHENNAI','CHE');
INSERT INTO CITY VALUES('BANGALORE','BAN');
INSERT INTO CITY VALUES('LADAKH','LAD');
INSERT INTO CITY VALUES('KOCHIN','KOC');
INSERT INTO CITY VALUES('DARGEELING','DAR');

CREATE TABLE TRAVEL(
    SOURCE_ID REFERENCES CITY(CITY_ID),
    DEST_ID REFERENCES CITY(CITY_ID),
    TRAVEL_COST INT
);

INSERT INTO TRAVEL VALUES('CHE','BAN',10000);
INSERT INTO TRAVEL VALUES('CHE','LAD',15000);
INSERT INTO TRAVEL VALUES('CHE','KOC',10000);
INSERT INTO TRAVEL VALUES('CHE','DAR',25000);
INSERT INTO TRAVEL VALUES('BAN','CHE',8000);
INSERT INTO TRAVEL VALUES('BAN','LAD',12000);
INSERT INTO TRAVEL VALUES('BAN','KOC',9000);
INSERT INTO TRAVEL VALUES('BAN','DAR',25000);
INSERT INTO TRAVEL VALUES('LAD','CHE',13000);
INSERT INTO TRAVEL VALUES('LAD','BAN',12000);
INSERT INTO TRAVEL VALUES('LAD','KOC',25000);
INSERT INTO TRAVEL VALUES('LAD','DAR',5000);
INSERT INTO TRAVEL VALUES('KOC','CHE',9000);
INSERT INTO TRAVEL VALUES('KOC','BAN',10000);
INSERT INTO TRAVEL VALUES('KOC','LAD',23000);
INSERT INTO TRAVEL VALUES('KOC','DAR',30000);
INSERT INTO TRAVEL VALUES('DAR','CHE',20000);
INSERT INTO TRAVEL VALUES('DAR','BAN',15000);
INSERT INTO TRAVEL VALUES('DAR','LAD',5000);
INSERT INTO TRAVEL VALUES('DAR','KOC',30000);

CREATE TABLE HOTELS(
    HOTEL_NAME VARCHAR(50),
    --CITY VARCHAR(30),
    HCITY_ID REFERENCES CITY(CITY_ID),
    --HTRAVEL_DIST INT,
    HTRAVEL_COST INT,
    RATING NUMERIC(3,2),
    PRIMARY KEY(HOTEL_NAME)
);

INSERT INTO HOTELS VALUES('DOWNHILL','CHE',25000,3.5);
INSERT INTO HOTELS VALUES('RCB','CHE',35000,4.5);
INSERT INTO HOTELS VALUES('DANCIN','CHE',15000,5.0);
INSERT INTO HOTELS VALUES('RIVERA','BAN',40000,4.5);
INSERT INTO HOTELS VALUES('DALE','BAN',15000,3.0);
INSERT INTO HOTELS VALUES('STORY','BAN',30000,1.5);
INSERT INTO HOTELS VALUES('WILLOW','LAD',45000,3.5);
INSERT INTO HOTELS VALUES('CRADLES','LAD',15000,2.5);
INSERT INTO HOTELS VALUES('SENORITA','LAD',20000,1.0);
INSERT INTO HOTELS VALUES('ARCADE','KOC',50000,1.5);
INSERT INTO HOTELS VALUES('CONCALMA','KOC',32000,3.5);
INSERT INTO HOTELS VALUES('ALORS','KOC',14000,2.0);
INSERT INTO HOTELS VALUES('ILOMILO','DAR',22000,4.0);
INSERT INTO HOTELS VALUES('OLDTOWN','DAR',15000,3.5);

CREATE TABLE TOURISM(
    SPOT_NAME VARCHAR(25),
    --TCITY_ID REFERENCES CITY(CITY_ID),
    THOTEL_NAME REFERENCES HOTELS(HOTEL_NAME),
    TTRAVEL_COST INT,
    TRATING NUMERIC(3,2)
);

INSERT INTO TOURISM VALUES('ELKLASICO','DOWNHILL',2000,5.0);
INSERT INTO TOURISM VALUES('ELKLASICO','RCB',2500,3.5);
INSERT INTO TOURISM VALUES('ELKLASICO','DANCIN',3000,4.5);
INSERT INTO TOURISM VALUES('MAGNA','DOWNHILL',3000,1.5);
INSERT INTO TOURISM VALUES('MAGNA','RCB',5000,3.5);
INSERT INTO TOURISM VALUES('MAGNA','DANCIN',6000,4.0);
INSERT INTO TOURISM VALUES('LIVERPOOL','DOWNHILL',5000,4.5);
INSERT INTO TOURISM VALUES('LIVERPOOL','RCB',2000,2.5);
INSERT INTO TOURISM VALUES('LIVERPOOL','DANCIN',4000,3.0);
INSERT INTO TOURISM VALUES('BARCA','RIVERA',5000,2.5);
INSERT INTO TOURISM VALUES('BARCA','DALE',3000,4.5);
INSERT INTO TOURISM VALUES('BARCA','STORY',5000,5.0);
INSERT INTO TOURISM VALUES('JUVEN','RIVERA',3500,1.5);
INSERT INTO TOURISM VALUES('JUVEN','DALE',5000,3.0);
INSERT INTO TOURISM VALUES('JUVEN','STORY',5000,5.0);
INSERT INTO TOURISM VALUES('KINGS','RIVERA',1000,3.5);
INSERT INTO TOURISM VALUES('KINGS','DALE',2500,2.5);
INSERT INTO TOURISM VALUES('KINGS','STORY',4500,1.0);
INSERT INTO TOURISM VALUES('SUNSET','WILLOW',5000,3.0);
INSERT INTO TOURISM VALUES('SUNSET','CRADLES',7000,4.5);
INSERT INTO TOURISM VALUES('SUNSET','SENORITA',8000,5.0);
INSERT INTO TOURISM VALUES('WATERFALLS','WILLOW',1500,2.5);
INSERT INTO TOURISM VALUES('WATERFALLS','CRADLES',5500,3.0);
INSERT INTO TOURISM VALUES('WATERFALLS','SENORITA',5000,3.5);
INSERT INTO TOURISM VALUES('SUICIDESPOT','WILLOW',2500,4.0);
INSERT INTO TOURISM VALUES('SUICIDESPOT','CRADLES',6500,4.5);
INSERT INTO TOURISM VALUES('SUICIDESPOT','SENORITA',7700,4.0);
INSERT INTO TOURISM VALUES('LOVESHOT','ARCADE',1000,5.0);
INSERT INTO TOURISM VALUES('LOVESHOT','CONCALMA',5000,1.5);
INSERT INTO TOURISM VALUES('LOVESHOT','ALORS',5000,2.5);
INSERT INTO TOURISM VALUES('CHOCOFAC','ARCADE',4400,3.5);
INSERT INTO TOURISM VALUES('CHOCOFAC','CONCALMA',5000,4.0);
INSERT INTO TOURISM VALUES('CHOCOFAC','ALORS',5000,5.0);
INSERT INTO TOURISM VALUES('SINS','ARCADE',4400,3.5);
INSERT INTO TOURISM VALUES('SINS','CONCALMA',5000,4.5);
INSERT INTO TOURISM VALUES('SINS','ALORS',5000,5.0);
INSERT INTO TOURISM VALUES('CHEEMS','ILOMILO',5000,2.5);
INSERT INTO TOURISM VALUES('CHEEMS','OLDTOWN',5000,3.0);
INSERT INTO TOURISM VALUES('BONK','ILOMILO',5000,4.5);
INSERT INTO TOURISM VALUES('BONK','OLDTOWN',5000,2.0);

CREATE TABLE EMERGENCY(
    --ECITY_ID REFERENCES CITY(CITY_ID),
    EMERGENCE VARCHAR(30),
    EHOTEL_NAME REFERENCES HOTELS(HOTEL_NAME),
    ETRAVEL_TIME INT
);

INSERT INTO EMERGENCY VALUES('HOSPITAL','DOWNHILL',30);
INSERT INTO EMERGENCY VALUES('HOSPITAL','RCB',10);
INSERT INTO EMERGENCY VALUES('HOSPITAL','DANCIN',15);
INSERT INTO EMERGENCY VALUES('HOSPITAL','RIVERA',25);
INSERT INTO EMERGENCY VALUES('HOSPITAL','DALE',20);
INSERT INTO EMERGENCY VALUES('HOSPITAL','STORY',60);
INSERT INTO EMERGENCY VALUES('HOSPITAL','WILLOW',30);
INSERT INTO EMERGENCY VALUES('HOSPITAL','CRADLES',5);
INSERT INTO EMERGENCY VALUES('HOSPITAL','SENORITA',15);
INSERT INTO EMERGENCY VALUES('HOSPITAL','ARCADE',55);
INSERT INTO EMERGENCY VALUES('HOSPITAL','CONCALMA',115);
INSERT INTO EMERGENCY VALUES('HOSPITAL','ALORS',45);
INSERT INTO EMERGENCY VALUES('HOSPITAL','ILOMILO',5);
INSERT INTO EMERGENCY VALUES('HOSPITAL','OLDTOWN',90);
INSERT INTO EMERGENCY VALUES('POLICA STATION','DOWNHILL',30);
INSERT INTO EMERGENCY VALUES('POLICA STATION','RCB',10);
INSERT INTO EMERGENCY VALUES('POLICA STATION','DANCIN',15);
INSERT INTO EMERGENCY VALUES('POLICA STATION','RIVERA',25);
INSERT INTO EMERGENCY VALUES('POLICA STATION','DALE',20);
INSERT INTO EMERGENCY VALUES('POLICA STATION','STORY',60);
INSERT INTO EMERGENCY VALUES('POLICA STATION','WILLOW',30);
INSERT INTO EMERGENCY VALUES('POLICA STATION','CRADLES',5);
INSERT INTO EMERGENCY VALUES('POLICA STATION','SENORITA',15);
INSERT INTO EMERGENCY VALUES('POLICA STATION','ARCADE',55);
INSERT INTO EMERGENCY VALUES('POLICA STATION','CONCALMA',115);
INSERT INTO EMERGENCY VALUES('POLICA STATION','ALORS',45);
INSERT INTO EMERGENCY VALUES('POLICA STATION','ILOMILO',5);
INSERT INTO EMERGENCY VALUES('POLICA STATION','OLDTOWN',90);


CREATE TABLE FUN(
    ENTERTAINMENT VARCHAR(30),
    FHOTEL_NAME REFERENCES HOTELS(HOTEL_NAME),
    --FCITY_ID REFERENCES CITY(CITY_ID),
    FTRAVEL_COST INT
);

INSERT INTO FUN VALUES('MALLS','DOWNHILL',300);
INSERT INTO FUN VALUES('MALLS','RCB',500);
INSERT INTO FUN VALUES('MALLS','DANCIN',250);
INSERT INTO FUN VALUES('MALLS','RIVERA',600);
INSERT INTO FUN VALUES('MALLS','DALE',350);
INSERT INTO FUN VALUES('MALLS','STORY',150);
INSERT INTO FUN VALUES('MALLS','WILLOW',500);
INSERT INTO FUN VALUES('MALLS','CRADLES',700);
INSERT INTO FUN VALUES('MALLS','SENORITA',50);
INSERT INTO FUN VALUES('MALLS','ARCADE',40);
INSERT INTO FUN VALUES('MALLS','CONCALMA',550);
INSERT INTO FUN VALUES('MALLS','ALORS',400);
INSERT INTO FUN VALUES('MALLS','ILOMILO',600);
INSERT INTO FUN VALUES('MALLS','OLDTOWN',100);
INSERT INTO FUN VALUES('THEATRE','DOWNHILL',300);
INSERT INTO FUN VALUES('THEATRE','RCB',500);
INSERT INTO FUN VALUES('THEATRE','DANCIN',250);
INSERT INTO FUN VALUES('THEATRE','RIVERA',600);
INSERT INTO FUN VALUES('THEATRE','DALE',350);
INSERT INTO FUN VALUES('THEATRE','STORY',150);
INSERT INTO FUN VALUES('THEATRE','WILLOW',500);
INSERT INTO FUN VALUES('THEATRE','CRADLES',700);
INSERT INTO FUN VALUES('THEATRE','SENORITA',50);
INSERT INTO FUN VALUES('THEATRE','ARCADE',40);
INSERT INTO FUN VALUES('THEATRE','CONCALMA',550);
INSERT INTO FUN VALUES('THEATRE','ALORS',400);
INSERT INTO FUN VALUES('THEATRE','ILOMILO',600);
INSERT INTO FUN VALUES('THEATRE','OLDTOWN',100);
INSERT INTO FUN VALUES('PARKS','DOWNHILL',300);
INSERT INTO FUN VALUES('PARKS','RCB',500);
INSERT INTO FUN VALUES('PARKS','DANCIN',250);
INSERT INTO FUN VALUES('PARKS','RIVERA',600);
INSERT INTO FUN VALUES('PARKS','DALE',350);
INSERT INTO FUN VALUES('PARKS','STORY',150);
INSERT INTO FUN VALUES('PARKS','WILLOW',500);
INSERT INTO FUN VALUES('PARKS','CRADLES',700);
INSERT INTO FUN VALUES('PARKS','SENORITA',50);
INSERT INTO FUN VALUES('PARKS','ARCADE',40);
INSERT INTO FUN VALUES('PARKS','CONCALMA',550);
INSERT INTO FUN VALUES('PARKS','ALORS',400);
INSERT INTO FUN VALUES('PARKS','ILOMILO',600);
INSERT INTO FUN VALUES('PARKS','OLDTOWN',100);

SELECT * FROM CITY;
SELECT * FROM TRAVEL;
SELECT * FROM HOTELS;
SELECT * FROM EMERGENCY;
SELECT * FROM TOURISM;

--FUNCTION TO FIND TRAVEL COST FROM STARTING POINT TO DESTINATION
CREATE OR REPLACE FUNCTION TRAVEL_COST (SRC IN VARCHAR,DEST IN VARCHAR)
RETURN INT
IS
    TCOST INT;
BEGIN
    SELECT TRAVEL_COST INTO TCOST FROM TRAVEL WHERE SOURCE_ID=SRC AND DEST_ID=DEST;
    RETURN TCOST;
END;
/

--PROCEDURE TO FIND HOTELS IN A PARTICULAR CITY
CREATE OR REPLACE PROCEDURE CITY_HOTEL_FIND(CID IN VARCHAR)
IS
    HNAME VARCHAR(20);
    HCID VARCHAR(10);
    HCOST INT;
    HRATING NUMERIC(3,2);
    CURSOR S IS
        SELECT HOTEL_NAME,HCITY_ID,HTRAVEL_COST,RATING FROM HOTELS;
BEGIN
    OPEN S;
    DBMS_OUTPUT.PUT_LINE('HOTELS IN CITY : '||CID);
    LOOP
        FETCH S INTO HNAME,HCID,HCOST,HRATING;
        EXIT WHEN S%NOTFOUND;
        IF (HCID=CID) THEN
            DBMS_OUTPUT.PUT_LINE(HNAME||' '||HCID||' '||HCOST||' '||HRATING);
        END IF;
    END LOOP;
    CLOSE S;
END;
/

--PACKAGE FOR INSERT,DELETE,FILTER AND SEARCH ON HOTELS
CREATE OR REPLACE PACKAGE P_HOTELS AS
PROCEDURE INSERTHOTELS(HOTEL_NAME IN VARCHAR, HCITY_ID IN VARCHAR, HCOST IN INT, HRATING IN NUMERIC);
PROCEDURE UPDATEHOTELS(CHOTEL_NAME IN VARCHAR, CHHCITY_ID IN VARCHAR, CHHCOST IN INT, CHHRATING IN NUMERIC);
PROCEDURE FILTER_RATING (R IN NUMERIC);
PROCEDURE COST_FILTER (CID IN VARCHAR,C IN INT);
PROCEDURE TOURISM_FIND(HN IN VARCHAR);
PROCEDURE FUN_FIND(HN IN VARCHAR);
END P_HOTELS;
/

CREATE OR REPLACE PACKAGE BODY P_HOTELS AS
PROCEDURE INSERTHOTELS(HOTEL_NAME IN VARCHAR, HCITY_ID IN VARCHAR, HCOST IN INT, HRATING IN NUMERIC)
IS
BEGIN
    INSERT INTO HOTELS VALUES(HOTEL_NAME, HCITY_ID, HCOST, HRATING);
    DBMS_OUTPUT.PUT_LINE('RECORD INSERTED');
END INSERTHOTELS;

PROCEDURE UPDATEHOTELS(CHOTEL_NAME IN VARCHAR, CHHCITY_ID IN VARCHAR, CHHCOST IN INT, CHHRATING IN NUMERIC)
IS
BEGIN
    UPDATE HOTELS
    SET HCITY_ID = CHHCITY_ID, HTRAVEL_COST = CHHCOST, RATING = CHHRATING WHERE HOTEL_NAME = CHOTEL_NAME;  
    DBMS_OUTPUT.PUT_LINE('RECORD UPDATED');
END UPDATEHOTELS;

PROCEDURE FILTER_RATING (R IN NUMERIC)
IS
    INVALID EXCEPTION;
    HNAME VARCHAR(10);
    HCOST INT;
    HRATING NUMERIC(3,2);
    CURSOR S IS
        SELECT HOTEL_NAME,HTRAVEL_COST,RATING FROM HOTELS;
BEGIN
    IF R<0 OR R>5 THEN 
        RAISE INVALID;
    END IF;
    OPEN S;
    DBMS_OUTPUT.PUT_LINE('HOTELS WITH RATING HIGHER THAN '||R);
    LOOP
        FETCH S INTO HNAME,HCOST,HRATING;
        EXIT WHEN S%NOTFOUND;
        IF HRATING>=R THEN
            DBMS_OUTPUT.PUT_LINE(HNAME||' '||HCOST||' '||HRATING);
        END IF;
    END LOOP;
    CLOSE S;
EXCEPTION
    WHEN INVALID THEN
        DBMS_OUTPUT.PUT_LINE('RATING TO FILTER IS OUT OF RANGE');
END FILTER_RATING;

PROCEDURE COST_FILTER (CID IN VARCHAR,C IN INT)
IS
    INVALID EXCEPTION;
    HNAME VARCHAR(10);
    HCITY VARCHAR(5);
    HCOST INT;
    HRATING NUMERIC(3,2);
    CURSOR S IS
        SELECT HOTEL_NAME,HCITY_ID,HTRAVEL_COST,RATING FROM HOTELS;
BEGIN
    IF C<0 THEN
        RAISE INVALID;
    END IF;
    OPEN S;
    DBMS_OUTPUT.PUT_LINE('HOTELS WITH COST LOWER THAN '||HCOST);
    LOOP
        FETCH S INTO HNAME,HCITY,HCOST,HRATING;
        EXIT WHEN S%NOTFOUND;
        IF ((HCOST<=C) AND (HCITY=CID)) THEN
            DBMS_OUTPUT.PUT_LINE(HNAME||' '||HCITY||' '||HCOST||' '||HRATING);
        END IF;
    END LOOP;
    CLOSE S;
EXCEPTION
    WHEN INVALID THEN
        DBMS_OUTPUT.PUT_LINE('COST ENTERED IS NEGATIVE');
END COST_FILTER;

PROCEDURE TOURISM_FIND(HN IN VARCHAR)
IS
    SNAME VARCHAR(20);
    HNAME VARCHAR(20);
    TCOST INT;
    TRATING NUMERIC(3,2);
    CURSOR S IS
        SELECT SPOT_NAME,THOTEL_NAME,TTRAVEL_COST,TRATING FROM TOURISM;
BEGIN
    OPEN S;
    DBMS_OUTPUT.PUT_LINE('TOURISM NEAR HOTEL : '||HN);
    LOOP
        FETCH S INTO SNAME,HNAME,TCOST,TRATING;
        EXIT WHEN S%NOTFOUND;
        IF (HNAME=HN) THEN
            DBMS_OUTPUT.PUT_LINE(SNAME||' '||HNAME||' '||TCOST||' '||TRATING);
        END IF;
    END LOOP;
    CLOSE S;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('NO TOURISM SPOTS NEAR HOTEL');
END TOURISM_FIND;

PROCEDURE FUN_FIND(HN IN VARCHAR)
IS
    ENAME VARCHAR(20);
    HNAME VARCHAR(20);
    FCOST INT;
    CURSOR S IS
        SELECT ENTERTAINMENT,FHOTEL_NAME,FTRAVEL_COST FROM FUN;
BEGIN
    OPEN S;
    DBMS_OUTPUT.PUT_LINE('FUN PLACES NEAR HOTEL : '||HN);
    LOOP
        FETCH S INTO ENAME,HNAME,FCOST;
        EXIT WHEN S%NOTFOUND;
        IF (HNAME=HN) THEN
            DBMS_OUTPUT.PUT_LINE(ENAME||' '||HNAME||' '||FCOST);
        END IF;
    END LOOP;
    CLOSE S;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('NO FUN SPOTS NEAR HOTEL');
END FUN_FIND;
END P_HOTELS;
/

--Triggers for displaying changes after update on Hotels table
CREATE OR REPLACE TRIGGER PRICE_UPDATE
AFTER UPDATE ON HOTELS
FOR EACH ROW
WHEN(NEW.HTRAVEL_COST != OLD.HTRAVEL_COST)
DECLARE
    DIFF INT;
BEGIN
    IF :NEW.HTRAVEL_COST > :OLD.HTRAVEL_COST THEN
        DIFF:= :NEW.HTRAVEL_COST - :OLD.HTRAVEL_COST;
        DBMS_OUTPUT.PUT_LINE('Price hike of Rs.'||DIFF);
    ELSE
        DIFF:= :OLD.HTRAVEL_COST - :NEW.HTRAVEL_COST;
        DBMS_OUTPUT.PUT_LINE('Price reduction of Rs.'||DIFF);
    END IF;
END;
/

CREATE OR REPLACE TRIGGER RATING_UPDATE
BEFORE UPDATE ON HOTELS
FOR EACH ROW
WHEN(NEW.RATING != OLD.RATING)
DECLARE
    DIFF NUMERIC(3,2);
BEGIN
    IF :NEW.RATING > :OLD.RATING THEN
        DIFF:= :NEW.RATING - :OLD.RATING;
        DBMS_OUTPUT.PUT_LINE('Rating changed by +'||DIFF);
    ELSE
        DIFF:= :OLD.RATING - :NEW.RATING;
        DBMS_OUTPUT.PUT_LINE('Rating changed by -'||DIFF);
    END IF;
END;
/

--PACKAGE FOR INSERT,UPDATE,DELETE AND FILTER ON TOURISM
CREATE OR REPLACE PACKAGE P_TOURISM AS
PROCEDURE INSERTTOURISM(SPOT_NAME IN VARCHAR, THOTEL_NAME IN VARCHAR, TCOST IN INT, TRATING IN NUMERIC);
PROCEDURE UPDATETOURISM(CEN_NAME IN VARCHAR, CH_NAME IN VARCHAR, CHHCOST IN INT, CHRATING IN NUMERIC);
PROCEDURE DELETETOURISM(CEN_NAME IN VARCHAR, CH_NAME IN VARCHAR, CHHCOST IN INT, CHRATING IN NUMERIC);
PROCEDURE FILTER_RATING (R IN NUMERIC);
PROCEDURE COST_FILTER (HN IN VARCHAR,C IN INT);
END P_TOURISM;
/

CREATE OR REPLACE PACKAGE BODY P_TOURISM AS
PROCEDURE INSERTTOURISM(SPOT_NAME IN VARCHAR, THOTEL_NAME IN VARCHAR, TCOST IN INT, TRATING IN NUMERIC)
IS
BEGIN
    INSERT INTO TOURISM VALUES(SPOT_NAME, THOTEL_NAME, TCOST, TRATING);
    DBMS_OUTPUT.PUT_LINE('RECORD INSERTED');
END INSERTTOURISM;

PROCEDURE UPDATETOURISM(CEN_NAME IN VARCHAR, CH_NAME IN VARCHAR, CHHCOST IN INT, CHRATING IN NUMERIC)
IS
BEGIN
    UPDATE TOURISM
    SET TTRAVEL_COST = CHHCOST, TRATING = CHRATING WHERE THOTEL_NAME = CH_NAME AND SPOT_NAME = CEN_NAME; 
    DBMS_OUTPUT.PUT_LINE('RECORD UPDATED');
END UPDATETOURISM;

PROCEDURE DELETETOURISM(CEN_NAME IN VARCHAR, CH_NAME IN VARCHAR, CHHCOST IN INT, CHRATING IN NUMERIC)
IS
BEGIN
    DELETE FROM TOURISM WHERE THOTEL_NAME = CH_NAME AND SPOT_NAME = CEN_NAME;  
    DBMS_OUTPUT.PUT_LINE('RECORD DELETED');
END DELETETOURISM;

PROCEDURE FILTER_RATING (R IN NUMERIC)
IS
    INVALID EXCEPTION;
    SNAME VARCHAR(25);
    TCOST INT;
    TRATING NUMERIC(3,2);
    CURSOR S IS
        SELECT SPOT_NAME,TTRAVEL_COST,TRATING FROM TOURISM;
BEGIN
    IF R>5 OR R<0 THEN
        RAISE INVALID;
    END IF;
    OPEN S;
    DBMS_OUTPUT.PUT_LINE('TOURISM SPOTS WITH RATING HIGHER THAN '||R);
    LOOP
        FETCH S INTO SNAME,TCOST,TRATING;
        EXIT WHEN S%NOTFOUND;
        IF (TRATING>=R) THEN
            DBMS_OUTPUT.PUT_LINE(SNAME||' '||TCOST||' '||TRATING);
        END IF;
    END LOOP;
    CLOSE S;
EXCEPTION
    WHEN INVALID THEN
        DBMS_OUTPUT.PUT_LINE('RATING TO FILTER IS OUT OF RANGE');
END FILTER_RATING;

PROCEDURE COST_FILTER (HN IN VARCHAR,C IN INT)
IS
    INVALID EXCEPTION;
    SNAME VARCHAR(20);
    HNAME VARCHAR(20);
    TCOST INT;
    TRAT NUMERIC(3,2);
    CURSOR S IS
        SELECT SPOT_NAME,THOTEL_NAME,TTRAVEL_COST,TRATING FROM TOURISM;
BEGIN
    IF C<0 THEN
        RAISE INVALID;
    END IF;
    OPEN S;
    DBMS_OUTPUT.PUT_LINE('TOURISM SPOTS WITH COST LOWER THAN '||C);
    LOOP
        FETCH S INTO SNAME,HNAME,TCOST,TRAT;
        EXIT WHEN S%NOTFOUND;
        IF ((TCOST<=C) AND (HNAME=HN)) THEN
            DBMS_OUTPUT.PUT_LINE(SNAME||' '||HNAME||' '||TCOST||' '||TRAT);
        END IF;
    END LOOP;
    CLOSE S;
EXCEPTION
    WHEN INVALID THEN
        DBMS_OUTPUT.PUT_LINE('COST CANT NEGATIVE');
END COST_FILTER;
END P_TOURISM;
/

--Triggers for displaying changes after update on Tourism table
CREATE OR REPLACE TRIGGER TPRICE_UPDATE
AFTER UPDATE ON TOURISM
FOR EACH ROW
WHEN(NEW.TTRAVEL_COST != OLD.TTRAVEL_COST)
DECLARE
    DIFF INT;
BEGIN
    IF :NEW.TTRAVEL_COST > :OLD.TTRAVEL_COST THEN
        DIFF:= :NEW.TTRAVEL_COST - :OLD.TTRAVEL_COST;
        DBMS_OUTPUT.PUT_LINE('Price hike of Rs.'||DIFF);
    ELSE
        DIFF:= :OLD.TTRAVEL_COST - :NEW.TTRAVEL_COST;
        DBMS_OUTPUT.PUT_LINE('Price reduction of Rs.'||DIFF);
    END IF;
END;
/

CREATE OR REPLACE TRIGGER TRATING_UPDATE
BEFORE UPDATE ON TOURISM
FOR EACH ROW
WHEN(NEW.TRATING != OLD.TRATING)
DECLARE
    DIFF NUMERIC(3,2);
BEGIN
    IF :NEW.TRATING > :OLD.TRATING THEN
        DIFF:= :NEW.TRATING - :OLD.TRATING;
        DBMS_OUTPUT.PUT_LINE('Rating changed by +'||DIFF);
    ELSE
        DIFF:= :OLD.TRATING - :NEW.TRATING;
        DBMS_OUTPUT.PUT_LINE('Rating changed by -'||DIFF);
    END IF;
END;
/

--PACKAGE FOR INSERT,UPDATE AND DELETE ON EMERGENCY TABLE
CREATE OR REPLACE PACKAGE P_EMERGENCY AS
PROCEDURE INSERTEMERGENCY(EMERGENCE IN VARCHAR, EHOTEL_NAME IN VARCHAR, ETRAVEL_TIME IN INT);
PROCEDURE UPDATEEMERGENCY(CEN IN VARCHAR, CH_NAME IN VARCHAR, CHTIME IN INT);
PROCEDURE DELETEEMERGENCY(CEN IN VARCHAR, CH_NAME IN VARCHAR, CHTIME IN INT);
PROCEDURE NEARBY(T IN INT,HN IN VARCHAR);
END P_EMERGENCY;
/

CREATE OR REPLACE PACKAGE BODY P_EMERGENCY AS
PROCEDURE INSERTEMERGENCY(EMERGENCE IN VARCHAR, EHOTEL_NAME IN VARCHAR, ETRAVEL_TIME IN INT)
IS
BEGIN
    INSERT INTO EMERGENCY VALUES(EMERGENCE, EHOTEL_NAME, ETRAVEL_TIME);
    DBMS_OUTPUT.PUT_LINE('RECORD INSERTED');
END INSERTEMERGENCY;

PROCEDURE UPDATEEMERGENCY(CEN IN VARCHAR, CH_NAME IN VARCHAR, CHTIME IN INT)
IS
BEGIN
    UPDATE EMERGENCY
    SET ETRAVEL_TIME = CHTIME WHERE EHOTEL_NAME = CH_NAME AND EMERGENCE = CEN;  
    DBMS_OUTPUT.PUT_LINE('RECORD UPDATED');
END UPDATEEMERGENCY;

PROCEDURE DELETEEMERGENCY(CEN IN VARCHAR, CH_NAME IN VARCHAR, CHTIME IN INT)
IS
BEGIN
    DELETE FROM EMERGENCY WHERE EHOTEL_NAME = CH_NAME AND EMERGENCE = CEN;
    DBMS_OUTPUT.PUT_LINE('RECORD DELETED');
END DELETEEMERGENCY;

PROCEDURE NEARBY(T IN INT,HN IN VARCHAR)
IS
    INVALID EXCEPTION;
    ENAME VARCHAR(20);
    HNAME VARCHAR(20);
    TTIME INT;
    CURSOR S IS
        SELECT EMERGENCE,EHOTEL_NAME,ETRAVEL_TIME FROM EMERGENCY;
BEGIN
    IF T<0 THEN
        RAISE INVALID;
    END IF;
    OPEN S;
    DBMS_OUTPUT.PUT_LINE('EMERGENCY SERVICES NEAR WITHIN '||T||' MINUTES FROM HOTEL '||HN);
    LOOP
        FETCH S INTO ENAME,HNAME,TTIME;
        EXIT WHEN S%NOTFOUND;
        IF ((TTIME<=T) AND (HN=HNAME)) THEN
            DBMS_OUTPUT.PUT_LINE(ENAME||' '||HNAME||' '||TTIME);
        END IF;
    END LOOP;
    CLOSE S;
EXCEPTION
    WHEN INVALID THEN
        DBMS_OUTPUT.PUT_LINE('TIME CANT BE NEGATIVE');
END NEARBY;
END P_EMERGENCY;
/

--PACKAGE FOR INSERT,UPDATE,DELETE AND FILTER ON FUN TABLE
CREATE OR REPLACE PACKAGE P_FUN AS
PROCEDURE INSERTFUN(ENTERTAINMENT IN VARCHAR, FHOTEL_NAME IN VARCHAR, FCOST IN INT);
PROCEDURE UPDATEFUN(CEN_NAME IN VARCHAR, CH_NAME IN VARCHAR, CHHCOST IN INT);
PROCEDURE DELETEFUN(CEN_NAME IN VARCHAR, CH_NAME IN VARCHAR);
PROCEDURE COST_FILTER (HN IN VARCHAR,C IN INT);
END P_FUN;
/

CREATE OR REPLACE PACKAGE BODY P_FUN AS
PROCEDURE INSERTFUN(ENTERTAINMENT IN VARCHAR, FHOTEL_NAME IN VARCHAR, FCOST IN INT)
IS
BEGIN
    INSERT INTO FUN VALUES(ENTERTAINMENT, FHOTEL_NAME, FCOST);
    DBMS_OUTPUT.PUT_LINE('RECORD INSERTED');
END INSERTFUN;

PROCEDURE UPDATEFUN(CEN_NAME IN VARCHAR, CH_NAME IN VARCHAR, CHHCOST IN INT)
IS
BEGIN
    UPDATE FUN
    SET FTRAVEL_COST = CHHCOST WHERE ENTERTAINMENT = CEN_NAME AND FHOTEL_NAME = CH_NAME;  
    DBMS_OUTPUT.PUT_LINE('RECORD UPDATED');
END UPDATEFUN;

PROCEDURE DELETEFUN(CEN_NAME IN VARCHAR, CH_NAME IN VARCHAR)
IS
BEGIN
    DELETE FROM FUN WHERE ENTERTAINMENT = CEN_NAME AND FHOTEL_NAME = CH_NAME;  
    DBMS_OUTPUT.PUT_LINE('RECORD DELETED');
END DELETEFUN;

PROCEDURE COST_FILTER (HN IN VARCHAR,C IN INT)
IS
    INVALID EXCEPTION;
    ENAME VARCHAR(20);
    HNAME VARCHAR(20);
    FCOST INT;
    CURSOR S IS
        SELECT ENTERTAINMENT,FHOTEL_NAME,FTRAVEL_COST FROM FUN;
BEGIN
    IF C<0 THEN
        RAISE INVALID;
    END IF;
    OPEN S;
    DBMS_OUTPUT.PUT_LINE('FUN SPOTS WITH COST LOWER THAN '||C);
    LOOP
        FETCH S INTO ENAME,HNAME,FCOST;
        EXIT WHEN S%NOTFOUND;
        IF ((FCOST<=C) AND (HNAME=HN)) THEN
            DBMS_OUTPUT.PUT_LINE(ENAME||' '||HNAME||' '||FCOST);
        END IF;
    END LOOP;
    CLOSE S;
EXCEPTION
    WHEN INVALID THEN
        DBMS_OUTPUT.PUT_LINE('COST CANT NEGATIVE');
END COST_FILTER;
END P_FUN;
/

--Triggers for displaying changes after update on Fun table
CREATE OR REPLACE TRIGGER FPRICE_UPDATE
AFTER UPDATE ON FUN
FOR EACH ROW
WHEN(NEW.FTRAVEL_COST != OLD.FTRAVEL_COST)
DECLARE
    DIFF INT;
BEGIN
    IF :NEW.FTRAVEL_COST > :OLD.FTRAVEL_COST THEN
        DIFF:= :NEW.FTRAVEL_COST - :OLD.FTRAVEL_COST;
        DBMS_OUTPUT.PUT_LINE('Price hike of Rs.'||DIFF);
    ELSE
        DIFF:= :OLD.FTRAVEL_COST - :NEW.FTRAVEL_COST;
        DBMS_OUTPUT.PUT_LINE('Price reduction of Rs.'||DIFF);
    END IF;
END;
/


--MAIN DRIVER CODE
DECLARE
SRC VARCHAR(20):='CHE';
DEST VARCHAR(20):='LAD';
TCOST INT;
RATING NUMERIC(3,2):=3.5;
FCOST INT:=15000;
HOTEL_NAME VARCHAR(20):='CRADLES';
TOURCOST INT:=6500;
FUNCOST INT:=700;
TIME_E INT:=5;
BEGIN

DBMS_OUTPUT.PUT_LINE('                   >>>>>>>  WELCOME TO TRAVEL GUIDE  <<<<<<<');
DBMS_OUTPUT.PUT_LINE('BY:');
DBMS_OUTPUT.PUT_LINE('     BALA VIGNESH (19PD07)');
DBMS_OUTPUT.PUT_LINE('     MOHAMMED HAFIZ (19PD22)');
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Inserting into Hotels table');
P_HOTELS.INSERTHOTELS('ROB','LAD',5000,2.5);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Updating  Hotels table');
P_HOTELS.UPDATEHOTELS('ROB','LAD',6000,3.5);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Deleting record from Tourism table');
P_TOURISM.DELETETOURISM('MAGNA','DOWNHILL',500,3.0);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Finding Travel cost from starting point to destination:');
DBMS_OUTPUT.PUT_LINE('Starting point -'||SRC||'      Destination - '||DEST);
TCOST:=TRAVEL_COST(SRC,DEST);
DBMS_OUTPUT.PUT_LINE('Cost - Rs.'||TCOST);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Finding Hotels in the city:');
CITY_HOTEL_FIND(DEST);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Finding Hotels with ratings greater than '||RATING||':');
P_HOTELS.FILTER_RATING(RATING);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Finding Hotels with cost lesser than '||RATING||':');
P_HOTELS.COST_FILTER(DEST,FCOST);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Finding Tourism spots near given Hotel:');
P_HOTELS.TOURISM_FIND(HOTEL_NAME);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Finding Fun entertainment near given Hotel:');
P_HOTELS.FUN_FIND(HOTEL_NAME);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Filtering Tourism rating:');
P_TOURISM.FILTER_RATING(RATING);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Filtering Tourism based on costs:');
P_TOURISM.COST_FILTER(HOTEL_NAME,TOURCOST);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Filtering Fun entertainment based on costs:');
P_FUN.COST_FILTER(HOTEL_NAME,FUNCOST);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE('* Emergency services nearby Hotel with certain time:');
P_EMERGENCY.NEARBY(TIME_E,HOTEL_NAME);
DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------');
END;
/